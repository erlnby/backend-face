version: '3.8'

services:
  backend-face-service-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app-dev
    restart: on-failure
    ports:
      - "8080:80"
    depends_on:
      - mongodb-service
    environment:
      - HTTP_PORT=${HTTP_PORT}
      - MONGODB_DATABASE_NAME=${MONGODB_DATABASE_NAME}
      - MONGODB_USERS_COLLECTION=${MONGODB_USERS_COLLECTION}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}

  backend-face-service:
    image: molel/backend-face:latest
    container_name: app
    restart: on-failure
    ports:
      - "8080:80"
    depends_on:
      - mongodb-service
    environment:
      - HTTP_PORT=${HTTP_PORT}
      - MONGODB_DATABASE_NAME=${MONGODB_DATABASE_NAME}
      - MONGODB_USERS_COLLECTION=${MONGODB_USERS_COLLECTION}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}

  mongodb-service:
    image: mongo:latest
    container_name: db
    restart: on-failure
    ports:
      - "27017:27017"
    volumes:
      - ./.database:/data/db
    environment:
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}

  integration:
    build:
      context: .
      dockerfile: integration-test/Dockerfile
    image: integration
    container_name: integration
    depends_on:
      - backend-face-service-dev
    environment:
      - MONGODB_DATABASE_NAME=${MONGODB_DATABASE_NAME}
      - MONGODB_USERS_COLLECTION=${MONGODB_USERS_COLLECTION}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
